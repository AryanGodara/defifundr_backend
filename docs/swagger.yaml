definitions:
  defi.Campaign:
    properties:
      campaignType:
        type: string
      deadline:
        type: integer
      description:
        type: string
      goal:
        type: integer
      id:
        type: integer
      image:
        type: string
      owner:
        type: string
      title:
        type: string
      totalFunds:
        type: integer
      totalNumberOfDonations:
        type: integer
    type: object
  interfaces.AddressResponse:
    properties:
      address:
        type: string
      private_key:
        type: string
    type: object
  interfaces.Campaigns:
    properties:
      campaign_id:
        type: string
      deadline:
        type: string
      description:
        type: string
      donations:
        items:
          $ref: '#/definitions/interfaces.DonorDetails'
        type: array
      goal:
        type: number
      id:
        type: integer
      image:
        type: string
      owner:
        type: string
      title:
        type: string
      total_amount_donated:
        type: number
      total_number:
        type: integer
      user:
        items:
          $ref: '#/definitions/interfaces.UserResponseInfo'
        type: array
    type: object
  interfaces.ChangePasswordRequest:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    type: object
  interfaces.CheckUsernameExistsRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  interfaces.CreateUserRequest:
    properties:
      email:
        type: string
      username:
        type: string
    required:
    - email
    - username
    type: object
  interfaces.DocSuccessResponse:
    properties:
      data: {}
      message:
        example: success
        type: string
      status:
        example: 200
        type: integer
    type: object
  interfaces.Donation:
    properties:
      amount:
        type: string
      campaign_id:
        type: string
    type: object
  interfaces.DonorDetails:
    properties:
      amount:
        type: number
      donor:
        type: string
      image:
        type: string
      username:
        type: string
    type: object
  interfaces.GetPasswordRequest:
    properties:
      biometrics:
        type: boolean
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  interfaces.GetPrivateKeyRequest:
    properties:
      password:
        type: string
    type: object
  interfaces.GetUserRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  interfaces.LoginResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/interfaces.UserResponse'
    type: object
  interfaces.LoginUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  interfaces.ResendVerificationCodeRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  interfaces.SearchCampaignRequest:
    properties:
      name:
        type: string
    type: object
  interfaces.SetBiometricsRequest:
    properties:
      biometrics:
        type: boolean
    type: object
  interfaces.UserResponse:
    properties:
      address:
        type: string
      avatar:
        type: string
      balance:
        type: string
      biometrics:
        type: boolean
      created_at:
        type: string
      email:
        type: string
      is_first_time:
        type: boolean
      password_changed_at:
        type: string
      username:
        type: string
    type: object
  interfaces.UserResponseInfo:
    properties:
      address:
        type: string
      avatar:
        type: string
      email:
        type: string
      username:
        type: string
    type: object
  interfaces.VerifyUserRequest:
    properties:
      otp_code:
        type: string
      username:
        type: string
    required:
    - otp_code
    - username
    type: object
  interfaces.VerifyUserResetRequest:
    properties:
      otp_code:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - otp_code
    - password
    - username
    type: object
  interfaces.Withdraw:
    properties:
      campaign_id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: kolawoleoluwasegun567@gmail
    name: DefiRaise
    url: http://www.swagger.io/support
  description: Decentralized Crowdfunding Platform for DeFi Projects
  title: DefiRaise API
  version: "1.0"
paths:
  /campaigns:
    get:
      consumes:
      - application/json
      description: Get campaigns
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.DocSuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/interfaces.Campaigns'
                  type: array
              type: object
      summary: Get campaigns
      tags:
      - Campaigns
  /campaigns/categories/{id}:
    get:
      consumes:
      - application/json
      description: Get Campaigns by category
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.DocSuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/interfaces.Campaigns'
                  type: array
              type: object
      summary: Get Campaigns by category
      tags:
      - Campaigns
  /campaigns/create:
    post:
      consumes:
      - application/json
      description: Create campaign
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Title
        in: formData
        name: title
        required: true
        type: string
      - description: Description
        in: formData
        name: description
        required: true
        type: string
      - description: Goal
        in: formData
        name: goal
        required: true
        type: string
      - description: Deadline
        in: formData
        name: deadline
        required: true
        type: string
      - description: Category
        in: formData
        name: category
        required: true
        type: string
      - description: Image
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: hex
          schema:
            type: string
      summary: Create campaign
      tags:
      - Campaigns
  /campaigns/donate:
    post:
      consumes:
      - application/json
      description: Donate to campaign
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Donation
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.Donation'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/interfaces.DocSuccessResponse'
      summary: Donate to campaign
      tags:
      - Campaigns
  /campaigns/donations:
    get:
      consumes:
      - application/json
      description: Get My Donations
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.DocSuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/defi.Campaign'
                  type: array
              type: object
      summary: Get My Donations
      tags:
      - Campaigns
  /campaigns/donors/{id}:
    get:
      consumes:
      - application/json
      description: Get Campaign Donors
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.DocSuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/interfaces.DonorDetails'
                  type: array
              type: object
      summary: Get Campaign Donors
      tags:
      - Campaigns
  /campaigns/latestCampaigns:
    get:
      consumes:
      - application/json
      description: Get latest active campaigns
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.DocSuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/interfaces.Campaigns'
                  type: array
              type: object
      summary: Get latest active campaigns
      tags:
      - Campaigns
  /campaigns/owner:
    get:
      consumes:
      - application/json
      description: Get Campaigns by owner
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.DocSuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/interfaces.Campaigns'
                  type: array
              type: object
      summary: Get Campaigns by owner
      tags:
      - Campaigns
  /campaigns/withdraw:
    post:
      consumes:
      - application/json
      description: Withdraw from campaign
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Withdraw
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.Withdraw'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      summary: Withdraw from campaign
      tags:
      - Campaigns
  /categories:
    get:
      consumes:
      - application/json
      description: Get Campaign Categories
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/interfaces.DocSuccessResponse'
      summary: Get Campaign Categories
      tags:
      - Campaigns
  /currentPrice:
    get:
      consumes:
      - application/json
      description: Get Current ETH Price
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/interfaces.DocSuccessResponse'
      summary: Get Current ETH Price
      tags:
      - Campaigns
  /search:
    post:
      consumes:
      - application/json
      description: Search Campaign by name
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: SearchCampaignRequest
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.SearchCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.DocSuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/interfaces.Campaigns'
                  type: array
              type: object
      summary: Search Campaign by name
      tags:
      - Campaigns
  /user:
    get:
      consumes:
      - application/json
      description: Get user details
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/interfaces.UserResponse'
              type: object
      summary: Get User
      tags:
      - Profile
    post:
      consumes:
      - application/json
      description: Creates a new user account with a unique username and email
      parameters:
      - description: CreateUser Request body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/interfaces.UserResponse'
              type: object
      summary: Create a new user
      tags:
      - Authentication
  /user/address:
    post:
      consumes:
      - application/json
      description: Get user details by address
      parameters:
      - description: Get private key
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.GetUserRequest'
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/interfaces.UserResponse'
              type: object
      summary: Get User By Address
      tags:
      - Profile
  /user/biometrics:
    post:
      consumes:
      - application/json
      description: Get biometrics settings
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Get private key
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.SetBiometricsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Biometrics set successfully
          schema:
            type: string
      summary: Get Biometrics Settings
      tags:
      - Profile
  /user/checkUsername:
    post:
      consumes:
      - application/json
      description: Check Username Exists with a unique username
      parameters:
      - description: Check Username Exists Request  body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.CheckUsernameExistsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User Verified
          schema:
            type: boolean
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Check Username Exists
      tags:
      - Authentication
  /user/login:
    post:
      consumes:
      - application/json
      description: Login a user with a unique username and password and returns a
        token
      parameters:
      - description: Login Request body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/interfaces.LoginResponse'
              type: object
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Login a user
      tags:
      - Authentication
  /user/password:
    post:
      consumes:
      - application/json
      description: Create Password with a unique username and password
      parameters:
      - description: Get Password Request  body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.GetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User Verified
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create Password
      tags:
      - Authentication
  /user/password/change:
    post:
      consumes:
      - application/json
      description: Change password of user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Get private key
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
      summary: Change Password
      tags:
      - Profile
  /user/password/reset/verify:
    post:
      consumes:
      - application/json
      description: Verify Reset Password Code with a unique username and otp code
      parameters:
      - description: Verify User Reset Request  body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.VerifyUserResetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User Verified
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Verify Reset Password Code
      tags:
      - Authentication
  /user/privatekey:
    post:
      consumes:
      - application/json
      description: Get private key of user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Get private key
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.GetPrivateKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            allOf:
            - $ref: '#/definitions/interfaces.UserResponse'
            - properties:
                data:
                  $ref: '#/definitions/interfaces.AddressResponse'
              type: object
      summary: Get Private Key
      tags:
      - Profile
  /user/update:
    post:
      consumes:
      - application/json
      description: Update user details
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Get private key
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.CheckUsernameExistsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            type: string
      summary: Update User
      tags:
      - Profile
  /user/verify:
    post:
      consumes:
      - application/json
      description: Verify Users with a unique username and otp code
      parameters:
      - description: Verify User Request  body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.VerifyUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User Verified
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Verify Users
      tags:
      - Authentication
  /user/verify/resend:
    post:
      consumes:
      - application/json
      description: Resend Verification Code with a unique username
      parameters:
      - description: Resend Verification Code Request  body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/interfaces.ResendVerificationCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OTP code resent
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Resend Verification Code
      tags:
      - Authentication
schemes:
- http
swagger: "2.0"
