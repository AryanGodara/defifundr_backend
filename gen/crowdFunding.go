// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package gen

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// CrowdFundingCampaign is an auto generated low-level Go binding around an user-defined struct.
type CrowdFundingCampaign struct {
	Owner             common.Address
	CampaignType      string
	Title             string
	Description       string
	Goal              *big.Int
	Deadline          *big.Int
	TotalFunds        *big.Int
	TotalContributors *big.Int
	Image             string
	Id                *big.Int
	Donators          []common.Address
	Donations         []*big.Int
	GoalReached       bool
	IsDeleted         bool
}

// CrowdFundingCategory is an auto generated low-level Go binding around an user-defined struct.
type CrowdFundingCategory struct {
	Name        string
	Description string
	Image       string
	Id          *big.Int
}

// GenMetaData contains all meta data concerning the Gen contract.
var GenMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"campaignCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaigns\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"campaignType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributors\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"goalReached\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"categories\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"categoryCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_campaignType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"}],\"name\":\"createCampaign\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"}],\"name\":\"createCategory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteAllCampaigns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteAllCategories\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"deleteCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_categoryId\",\"type\":\"uint256\"}],\"name\":\"deleteCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaign\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"campaignType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributors\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"goalReached\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"}],\"internalType\":\"structCrowdFunding.Campaign\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaignDonations\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaignDonationsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaignDonationsSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaignDonators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"getCampaignDonatorsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaigns\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"campaignType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributors\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"goalReached\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"}],\"internalType\":\"structCrowdFunding.Campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_categoryId\",\"type\":\"uint256\"}],\"name\":\"getCampaignsByCategory\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"campaignType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributors\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"goalReached\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"}],\"internalType\":\"structCrowdFunding.Campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getCampaignsByOwner\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"campaignType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributors\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"goalReached\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"}],\"internalType\":\"structCrowdFunding.Campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_categoryId\",\"type\":\"uint256\"}],\"name\":\"getCampaignsByType\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"campaignType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributors\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"goalReached\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"}],\"internalType\":\"structCrowdFunding.Campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCampaignsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCategories\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"structCrowdFunding.Category[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"getDonorsAddressesAndAmounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"getTotalDonationsByCampaignId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"payOut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"searchCampaignByName\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"campaignType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFunds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalContributors\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"image\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"donators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"donations\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"goalReached\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"}],\"internalType\":\"structCrowdFunding.Campaign[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignId\",\"type\":\"uint256\"}],\"name\":\"sendBackDonations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040525f6002555f600355348015610017575f80fd5b50615d8280620000265f395ff3fe6080604052600436106101b6575f3560e01c80637274e30d116100eb578063ceca737f11610089578063e6ea7dcc11610063578063e6ea7dcc14610688578063ef343c57146106c4578063f14faf6f146106ec578063febe314314610708576101b6565b8063ceca737f146105fc578063d07f5b0e14610624578063da333ca614610660576101b6565b806388a994af116100c557806388a994af14610519578063a05da7c714610557578063a6b0363314610593578063c6cdbe5e146105bd576101b6565b80637274e30d1461049d57806375970193146104c75780637e6253da146104ef576101b6565b80634db0412c1161015857806351bdebb91161013257806351bdebb9146103ad5780635598f8cc146103e957806356511ea4146104255780636e5add4814610461576101b6565b80634db0412c1461030b5780634ea74046146103355780635167642f14610371576101b6565b80631b7594c8116101945780631b7594c814610279578063272311af1461028f5780632be32dbb146102a5578063475ef40a146102cf576101b6565b80630cf41a76146101ba578063141961bc146101f657806315562b441461023d575b5f80fd5b3480156101c5575f80fd5b506101e060048036038101906101db9190614674565b610744565b6040516101ed9190614aea565b60405180910390f35b348015610201575f80fd5b5061021c60048036038101906102179190614674565b610c66565b6040516102349c9b9a99989796959493929190614b7f565b60405180910390f35b348015610248575f80fd5b50610263600480360381019061025e9190614d7f565b610f11565b6040516102709190614aea565b60405180910390f35b348015610284575f80fd5b5061028d611d3f565b005b34801561029a575f80fd5b506102a3611d8d565b005b3480156102b0575f80fd5b506102b9611df6565b6040516102c69190614dc6565b60405180910390f35b3480156102da575f80fd5b506102f560048036038101906102f09190614674565b611dfc565b6040516103029190614dc6565b60405180910390f35b348015610316575f80fd5b5061031f611e79565b60405161032c9190614f08565b60405180910390f35b348015610340575f80fd5b5061035b60048036038101906103569190614674565b6120ee565b6040516103689190614dc6565b60405180910390f35b34801561037c575f80fd5b5061039760048036038101906103929190614674565b61210d565b6040516103a49190614f94565b60405180910390f35b3480156103b8575f80fd5b506103d360048036038101906103ce9190614fde565b612176565b6040516103e09190614aea565b60405180910390f35b3480156103f4575f80fd5b5061040f600480360381019061040a9190614674565b612685565b60405161041c9190615157565b60405180910390f35b348015610430575f80fd5b5061044b60048036038101906104469190614674565b612a8c565b6040516104589190614dc6565b60405180910390f35b34801561046c575f80fd5b5061048760048036038101906104829190615177565b612ab0565b6040516104949190614dc6565b60405180910390f35b3480156104a8575f80fd5b506104b1612c1c565b6040516104be9190614dc6565b60405180910390f35b3480156104d2575f80fd5b506104ed60048036038101906104e89190614674565b612c22565b005b3480156104fa575f80fd5b50610503612cf2565b6040516105109190614dc6565b60405180910390f35b348015610524575f80fd5b5061053f600480360381019061053a9190614674565b612cfb565b60405161054e939291906152dc565b60405180910390f35b348015610562575f80fd5b5061057d6004803603810190610578919061531f565b612e1b565b60405161058a9190614dc6565b60405180910390f35b34801561059e575f80fd5b506105a7612ea2565b6040516105b49190614aea565b60405180910390f35b3480156105c8575f80fd5b506105e360048036038101906105de9190614674565b61333a565b6040516105f394939291906153c3565b60405180910390f35b348015610607575f80fd5b50610622600480360381019061061d9190614674565b6134f8565b005b34801561062f575f80fd5b5061064a60048036038101906106459190614674565b613542565b6040516106579190614aea565b60405180910390f35b34801561066b575f80fd5b5061068660048036038101906106819190614674565b613a64565b005b348015610693575f80fd5b506106ae60048036038101906106a99190614674565b613c9c565b6040516106bb919061541b565b60405180910390f35b3480156106cf575f80fd5b506106ea60048036038101906106e59190614674565b613d3a565b005b61070660048036038101906107019190614674565b613ffa565b005b348015610713575f80fd5b5061072e60048036038101906107299190614674565b614511565b60405161073b9190614dc6565b60405180910390f35b60605f60025467ffffffffffffffff81111561076357610762614c5b565b5b60405190808252806020026020018201604052801561079c57816020015b610789614530565b8152602001906001900390816107815790505b5090505f805b600254811015610c5b5760015f8681526020019081526020015f205f016040516020016107cf9190615534565b604051602081830303815290604052805190602001205f808381526020019081526020015f206001016040516020016108089190615534565b6040516020818303038152906040528051906020012003610c48575f808281526020019081526020015f20604051806101c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546108a390615468565b80601f01602080910402602001604051908101604052809291908181526020018280546108cf90615468565b801561091a5780601f106108f15761010080835404028352916020019161091a565b820191905f5260205f20905b8154815290600101906020018083116108fd57829003601f168201915b5050505050815260200160028201805461093390615468565b80601f016020809104026020016040519081016040528092919081815260200182805461095f90615468565b80156109aa5780601f10610981576101008083540402835291602001916109aa565b820191905f5260205f20905b81548152906001019060200180831161098d57829003601f168201915b505050505081526020016003820180546109c390615468565b80601f01602080910402602001604051908101604052809291908181526020018280546109ef90615468565b8015610a3a5780601f10610a1157610100808354040283529160200191610a3a565b820191905f5260205f20905b815481529060010190602001808311610a1d57829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882018054610a7b90615468565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa790615468565b8015610af25780601f10610ac957610100808354040283529160200191610af2565b820191905f5260205f20905b815481529060010190602001808311610ad557829003601f168201915b5050505050815260200160098201548152602001600a8201805480602002602001604051908101604052809291908181526020018280548015610b8757602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b3e575b50505050508152602001600b8201805480602002602001604051908101604052809291908181526020018280548015610bdd57602002820191905f5260205f20905b815481526020019060010190808311610bc9575b50505050508152602001600c82015f9054906101000a900460ff16151515158152602001600c820160019054906101000a900460ff161515151581525050838381518110610c2e57610c2d61554a565b5b60200260200101819052508180610c44906155a4565b9250505b8080610c53906155a4565b9150506107a2565b508192505050919050565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610ca990615468565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd590615468565b8015610d205780601f10610cf757610100808354040283529160200191610d20565b820191905f5260205f20905b815481529060010190602001808311610d0357829003601f168201915b505050505090806002018054610d3590615468565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6190615468565b8015610dac5780601f10610d8357610100808354040283529160200191610dac565b820191905f5260205f20905b815481529060010190602001808311610d8f57829003601f168201915b505050505090806003018054610dc190615468565b80601f0160208091040260200160405190810160405280929190818152602001828054610ded90615468565b8015610e385780601f10610e0f57610100808354040283529160200191610e38565b820191905f5260205f20905b815481529060010190602001808311610e1b57829003601f168201915b505050505090806004015490806005015490806006015490806007015490806008018054610e6590615468565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9190615468565b8015610edc5780601f10610eb357610100808354040283529160200191610edc565b820191905f5260205f20905b815481529060010190602001808311610ebf57829003601f168201915b50505050509080600901549080600c015f9054906101000a900460ff169080600c0160019054906101000a900460ff1690508c565b60605f60025467ffffffffffffffff811115610f3057610f2f614c5b565b5b604051908082528060200260200182016040528015610f6957816020015b610f56614530565b815260200190600190039081610f4e5790505b5090505f805b600254811015611d345784604051602001610f8a919061561b565b604051602081830303815290604052805190602001205f808381526020019081526020015f20600201604051602001610fc39190615534565b6040516020818303038152906040528051906020012003611407575f808281526020019081526020015f20604051806101c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461105e90615468565b80601f016020809104026020016040519081016040528092919081815260200182805461108a90615468565b80156110d55780601f106110ac576101008083540402835291602001916110d5565b820191905f5260205f20905b8154815290600101906020018083116110b857829003601f168201915b505050505081526020016002820180546110ee90615468565b80601f016020809104026020016040519081016040528092919081815260200182805461111a90615468565b80156111655780601f1061113c57610100808354040283529160200191611165565b820191905f5260205f20905b81548152906001019060200180831161114857829003601f168201915b5050505050815260200160038201805461117e90615468565b80601f01602080910402602001604051908101604052809291908181526020018280546111aa90615468565b80156111f55780601f106111cc576101008083540402835291602001916111f5565b820191905f5260205f20905b8154815290600101906020018083116111d857829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201805461123690615468565b80601f016020809104026020016040519081016040528092919081815260200182805461126290615468565b80156112ad5780601f10611284576101008083540402835291602001916112ad565b820191905f5260205f20905b81548152906001019060200180831161129057829003601f168201915b5050505050815260200160098201548152602001600a820180548060200260200160405190810160405280929190818152602001828054801561134257602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112f9575b50505050508152602001600b820180548060200260200160405190810160405280929190818152602001828054801561139857602002820191905f5260205f20905b815481526020019060010190808311611384575b50505050508152602001600c82015f9054906101000a900460ff16151515158152602001600c820160019054906101000a900460ff1615151515815250508383815181106113e9576113e861554a565b5b602002602001018190525081806113ff906155a4565b925050611d21565b84604051602001611418919061561b565b604051602081830303815290604052805190602001205f808381526020019081526020015f206003016040516020016114519190615534565b6040516020818303038152906040528051906020012003611895575f808281526020019081526020015f20604051806101c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546114ec90615468565b80601f016020809104026020016040519081016040528092919081815260200182805461151890615468565b80156115635780601f1061153a57610100808354040283529160200191611563565b820191905f5260205f20905b81548152906001019060200180831161154657829003601f168201915b5050505050815260200160028201805461157c90615468565b80601f01602080910402602001604051908101604052809291908181526020018280546115a890615468565b80156115f35780601f106115ca576101008083540402835291602001916115f3565b820191905f5260205f20905b8154815290600101906020018083116115d657829003601f168201915b5050505050815260200160038201805461160c90615468565b80601f016020809104026020016040519081016040528092919081815260200182805461163890615468565b80156116835780601f1061165a57610100808354040283529160200191611683565b820191905f5260205f20905b81548152906001019060200180831161166657829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820180546116c490615468565b80601f01602080910402602001604051908101604052809291908181526020018280546116f090615468565b801561173b5780601f106117125761010080835404028352916020019161173b565b820191905f5260205f20905b81548152906001019060200180831161171e57829003601f168201915b5050505050815260200160098201548152602001600a82018054806020026020016040519081016040528092919081815260200182805480156117d057602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611787575b50505050508152602001600b820180548060200260200160405190810160405280929190818152602001828054801561182657602002820191905f5260205f20905b815481526020019060010190808311611812575b50505050508152602001600c82015f9054906101000a900460ff16151515158152602001600c820160019054906101000a900460ff1615151515815250508383815181106118775761187661554a565b5b6020026020010181905250818061188d906155a4565b925050611d20565b846040516020016118a6919061561b565b604051602081830303815290604052805190602001205f808381526020019081526020015f206001016040516020016118df9190615534565b6040516020818303038152906040528051906020012003611d1f575f808281526020019081526020015f20604051806101c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461197a90615468565b80601f01602080910402602001604051908101604052809291908181526020018280546119a690615468565b80156119f15780601f106119c8576101008083540402835291602001916119f1565b820191905f5260205f20905b8154815290600101906020018083116119d457829003601f168201915b50505050508152602001600282018054611a0a90615468565b80601f0160208091040260200160405190810160405280929190818152602001828054611a3690615468565b8015611a815780601f10611a5857610100808354040283529160200191611a81565b820191905f5260205f20905b815481529060010190602001808311611a6457829003601f168201915b50505050508152602001600382018054611a9a90615468565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac690615468565b8015611b115780601f10611ae857610100808354040283529160200191611b11565b820191905f5260205f20905b815481529060010190602001808311611af457829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882018054611b5290615468565b80601f0160208091040260200160405190810160405280929190818152602001828054611b7e90615468565b8015611bc95780601f10611ba057610100808354040283529160200191611bc9565b820191905f5260205f20905b815481529060010190602001808311611bac57829003601f168201915b5050505050815260200160098201548152602001600a8201805480602002602001604051908101604052809291908181526020018280548015611c5e57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611c15575b50505050508152602001600b8201805480602002602001604051908101604052809291908181526020018280548015611cb457602002820191905f5260205f20905b815481526020019060010190808311611ca0575b50505050508152602001600c82015f9054906101000a900460ff16151515158152602001600c820160019054906101000a900460ff161515151581525050838381518110611d0557611d0461554a565b5b60200260200101819052508180611d1b906155a4565b9250505b5b5b8080611d2c906155a4565b915050610f6f565b508192505050919050565b5f5b600254811015611d8a5760015f808381526020019081526020015f20600c0160016101000a81548160ff0219169083151502179055508080611d82906155a4565b915050611d41565b50565b5f5b600354811015611df35760015f8281526020019081526020015f205f8082015f611db991906145b1565b600182015f611dc891906145b1565b600282015f611dd791906145b1565b600382015f905550508080611deb906155a4565b915050611d8f565b50565b60035481565b5f805f90505f5b5f808581526020019081526020015f20600b0180549050811015611e6f575f808581526020019081526020015f20600b018181548110611e4657611e4561554a565b5b905f5260205f20015482611e5a9190615631565b91508080611e67906155a4565b915050611e03565b5080915050919050565b60605f60035467ffffffffffffffff811115611e9857611e97614c5b565b5b604051908082528060200260200182016040528015611ed157816020015b611ebe6145ee565b815260200190600190039081611eb65790505b5090505f5b6003548110156120e65760015f8281526020019081526020015f206040518060800160405290815f82018054611f0b90615468565b80601f0160208091040260200160405190810160405280929190818152602001828054611f3790615468565b8015611f825780601f10611f5957610100808354040283529160200191611f82565b820191905f5260205f20905b815481529060010190602001808311611f6557829003601f168201915b50505050508152602001600182018054611f9b90615468565b80601f0160208091040260200160405190810160405280929190818152602001828054611fc790615468565b80156120125780601f10611fe957610100808354040283529160200191612012565b820191905f5260205f20905b815481529060010190602001808311611ff557829003601f168201915b5050505050815260200160028201805461202b90615468565b80601f016020809104026020016040519081016040528092919081815260200182805461205790615468565b80156120a25780601f10612079576101008083540402835291602001916120a2565b820191905f5260205f20905b81548152906001019060200180831161208557829003601f168201915b505050505081526020016003820154815250508282815181106120c8576120c761554a565b5b602002602001018190525080806120de906155a4565b915050611ed6565b508091505090565b5f805f8381526020019081526020015f20600b01805490509050919050565b60605f808381526020019081526020015f20600b0180548060200260200160405190810160405280929190818152602001828054801561216a57602002820191905f5260205f20905b815481526020019060010190808311612156575b50505050509050919050565b60605f60025467ffffffffffffffff81111561219557612194614c5b565b5b6040519080825280602002602001820160405280156121ce57816020015b6121bb614530565b8152602001906001900390816121b35790505b5090505f805b60025481101561267a578473ffffffffffffffffffffffffffffffffffffffff165f808381526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603612667575f808281526020019081526020015f20604051806101c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546122c290615468565b80601f01602080910402602001604051908101604052809291908181526020018280546122ee90615468565b80156123395780601f1061231057610100808354040283529160200191612339565b820191905f5260205f20905b81548152906001019060200180831161231c57829003601f168201915b5050505050815260200160028201805461235290615468565b80601f016020809104026020016040519081016040528092919081815260200182805461237e90615468565b80156123c95780601f106123a0576101008083540402835291602001916123c9565b820191905f5260205f20905b8154815290600101906020018083116123ac57829003601f168201915b505050505081526020016003820180546123e290615468565b80601f016020809104026020016040519081016040528092919081815260200182805461240e90615468565b80156124595780601f1061243057610100808354040283529160200191612459565b820191905f5260205f20905b81548152906001019060200180831161243c57829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201805461249a90615468565b80601f01602080910402602001604051908101604052809291908181526020018280546124c690615468565b80156125115780601f106124e857610100808354040283529160200191612511565b820191905f5260205f20905b8154815290600101906020018083116124f457829003601f168201915b5050505050815260200160098201548152602001600a82018054806020026020016040519081016040528092919081815260200182805480156125a657602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161255d575b50505050508152602001600b82018054806020026020016040519081016040528092919081815260200182805480156125fc57602002820191905f5260205f20905b8154815260200190600101908083116125e8575b50505050508152602001600c82015f9054906101000a900460ff16151515158152602001600c820160019054906101000a900460ff16151515158152505083838151811061264d5761264c61554a565b5b60200260200101819052508180612663906155a4565b9250505b8080612672906155a4565b9150506121d4565b508192505050919050565b61268d614530565b5f808381526020019081526020015f20604051806101c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461270d90615468565b80601f016020809104026020016040519081016040528092919081815260200182805461273990615468565b80156127845780601f1061275b57610100808354040283529160200191612784565b820191905f5260205f20905b81548152906001019060200180831161276757829003601f168201915b5050505050815260200160028201805461279d90615468565b80601f01602080910402602001604051908101604052809291908181526020018280546127c990615468565b80156128145780601f106127eb57610100808354040283529160200191612814565b820191905f5260205f20905b8154815290600101906020018083116127f757829003601f168201915b5050505050815260200160038201805461282d90615468565b80601f016020809104026020016040519081016040528092919081815260200182805461285990615468565b80156128a45780601f1061287b576101008083540402835291602001916128a4565b820191905f5260205f20905b81548152906001019060200180831161288757829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820180546128e590615468565b80601f016020809104026020016040519081016040528092919081815260200182805461291190615468565b801561295c5780601f106129335761010080835404028352916020019161295c565b820191905f5260205f20905b81548152906001019060200180831161293f57829003601f168201915b5050505050815260200160098201548152602001600a82018054806020026020016040519081016040528092919081815260200182805480156129f157602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116129a8575b50505050508152602001600b8201805480602002602001604051908101604052809291908181526020018280548015612a4757602002820191905f5260205f20905b815481526020019060010190808311612a33575b50505050508152602001600c82015f9054906101000a900460ff16151515158152602001600c820160019054906101000a900460ff1615151515815250509050919050565b5f805f808481526020019081526020015f20600b0180549050905080915050919050565b5f805f8060025481526020019081526020015f20905042816005015410612b0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b03906156ae565b60405180910390fd5b33815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087816001019081612b5e9190615857565b5086816002019081612b709190615857565b5085816003019081612b829190615857565b5084816004018190555083816005018190555082816008019081612ba69190615857565b5060025481600901819055505f81600c0160016101000a81548160ff0219169083151502179055505f81600c015f6101000a81548160ff02191690831515021790555060025f815480929190612bfb906155a4565b91905055506001600254612c0f9190615926565b9150509695505050505050565b60025481565b805f808281526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cb9906159c9565b60405180910390fd5b60015f808481526020019081526020015f20600c0160016101000a81548160ff0219169083151502179055505050565b5f600254905090565b6060805f805f8581526020019081526020015f20600a015f808681526020019081526020015f20600b015f808781526020019081526020015f206006015482805480602002602001604051908101604052809291908181526020018280548015612db757602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612d6e575b5050505050925081805480602002602001604051908101604052809291908181526020018280548015612e0757602002820191905f5260205f20905b815481526020019060010190808311612df3575b505050505091509250925092509193909250565b5f8060015f60035481526020019081526020015f20905084815f019081612e429190615857565b5083816001019081612e549190615857565b5082816002019081612e669190615857565b50600354816003018190555060035f815480929190612e84906155a4565b91905055506001600354612e989190615926565b9150509392505050565b60605f60025467ffffffffffffffff811115612ec157612ec0614c5b565b5b604051908082528060200260200182016040528015612efa57816020015b612ee7614530565b815260200190600190039081612edf5790505b5090505f5b600254811015613332575f808281526020019081526020015f20604051806101c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054612f8990615468565b80601f0160208091040260200160405190810160405280929190818152602001828054612fb590615468565b80156130005780601f10612fd757610100808354040283529160200191613000565b820191905f5260205f20905b815481529060010190602001808311612fe357829003601f168201915b5050505050815260200160028201805461301990615468565b80601f016020809104026020016040519081016040528092919081815260200182805461304590615468565b80156130905780601f1061306757610100808354040283529160200191613090565b820191905f5260205f20905b81548152906001019060200180831161307357829003601f168201915b505050505081526020016003820180546130a990615468565b80601f01602080910402602001604051908101604052809291908181526020018280546130d590615468565b80156131205780601f106130f757610100808354040283529160200191613120565b820191905f5260205f20905b81548152906001019060200180831161310357829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201805461316190615468565b80601f016020809104026020016040519081016040528092919081815260200182805461318d90615468565b80156131d85780601f106131af576101008083540402835291602001916131d8565b820191905f5260205f20905b8154815290600101906020018083116131bb57829003601f168201915b5050505050815260200160098201548152602001600a820180548060200260200160405190810160405280929190818152602001828054801561326d57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311613224575b50505050508152602001600b82018054806020026020016040519081016040528092919081815260200182805480156132c357602002820191905f5260205f20905b8154815260200190600101908083116132af575b50505050508152602001600c82015f9054906101000a900460ff16151515158152602001600c820160019054906101000a900460ff1615151515815250508282815181106133145761331361554a565b5b6020026020010181905250808061332a906155a4565b915050612eff565b508091505090565b6001602052805f5260405f205f91509050805f01805461335990615468565b80601f016020809104026020016040519081016040528092919081815260200182805461338590615468565b80156133d05780601f106133a7576101008083540402835291602001916133d0565b820191905f5260205f20905b8154815290600101906020018083116133b357829003601f168201915b5050505050908060010180546133e590615468565b80601f016020809104026020016040519081016040528092919081815260200182805461341190615468565b801561345c5780601f106134335761010080835404028352916020019161345c565b820191905f5260205f20905b81548152906001019060200180831161343f57829003601f168201915b50505050509080600201805461347190615468565b80601f016020809104026020016040519081016040528092919081815260200182805461349d90615468565b80156134e85780601f106134bf576101008083540402835291602001916134e8565b820191905f5260205f20905b8154815290600101906020018083116134cb57829003601f168201915b5050505050908060030154905084565b60015f8281526020019081526020015f205f8082015f61351891906145b1565b600182015f61352791906145b1565b600282015f61353691906145b1565b600382015f9055505050565b60605f60025467ffffffffffffffff81111561356157613560614c5b565b5b60405190808252806020026020018201604052801561359a57816020015b613587614530565b81526020019060019003908161357f5790505b5090505f805b600254811015613a595760015f8681526020019081526020015f205f016040516020016135cd9190615534565b604051602081830303815290604052805190602001205f808381526020019081526020015f206001016040516020016136069190615534565b6040516020818303038152906040528051906020012003613a46575f808281526020019081526020015f20604051806101c00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546136a190615468565b80601f01602080910402602001604051908101604052809291908181526020018280546136cd90615468565b80156137185780601f106136ef57610100808354040283529160200191613718565b820191905f5260205f20905b8154815290600101906020018083116136fb57829003601f168201915b5050505050815260200160028201805461373190615468565b80601f016020809104026020016040519081016040528092919081815260200182805461375d90615468565b80156137a85780601f1061377f576101008083540402835291602001916137a8565b820191905f5260205f20905b81548152906001019060200180831161378b57829003601f168201915b505050505081526020016003820180546137c190615468565b80601f01602080910402602001604051908101604052809291908181526020018280546137ed90615468565b80156138385780601f1061380f57610100808354040283529160200191613838565b820191905f5260205f20905b81548152906001019060200180831161381b57829003601f168201915b505050505081526020016004820154815260200160058201548152602001600682015481526020016007820154815260200160088201805461387990615468565b80601f01602080910402602001604051908101604052809291908181526020018280546138a590615468565b80156138f05780601f106138c7576101008083540402835291602001916138f0565b820191905f5260205f20905b8154815290600101906020018083116138d357829003601f168201915b5050505050815260200160098201548152602001600a820180548060200260200160405190810160405280929190818152602001828054801561398557602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161393c575b50505050508152602001600b82018054806020026020016040519081016040528092919081815260200182805480156139db57602002820191905f5260205f20905b8154815260200190600101908083116139c7575b50505050508152602001600c82015f9054906101000a900460ff16151515158152602001600c820160019054906101000a900460ff161515151581525050838381518110613a2c57613a2b61554a565b5b60200260200101819052508180613a42906155a4565b9250505b8080613a51906155a4565b9150506135a0565b508192505050919050565b805f808281526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613b04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613afb906159c9565b60405180910390fd5b815f808281526020019081526020015f20600501544211613b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613b51906156ae565b60405180910390fd5b5f805f8581526020019081526020015f209050806004015481600601541015613bb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613baf90615a31565b60405180910390fd5b5f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260060154604051613c0390615a7c565b5f6040518083038185875af1925050503d805f8114613c3d576040519150601f19603f3d011682016040523d82523d5f602084013e613c42565b606091505b505090508015613c5a575f8260060181905550613c95565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613c8c90615ada565b60405180910390fd5b5050505050565b60605f808381526020019081526020015f20600a01805480602002602001604051908101604052809291908181526020018280548015613d2e57602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311613ce5575b50505050509050919050565b805f808281526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613dda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613dd1906159c9565b60405180910390fd5b815f808281526020019081526020015f20600501544211613e30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613e27906156ae565b60405180910390fd5b5f805f8581526020019081526020015f2090508060040154816006015410613e8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613e8490615b42565b60405180910390fd5b5f5b81600a0180549050811015613ff3575f82600a018281548110613eb557613eb461554a565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1683600b018381548110613f0957613f0861554a565b5b905f5260205f200154604051613f1e90615a7c565b5f6040518083038185875af1925050503d805f8114613f58576040519150601f19603f3d011682016040523d82523d5f602084013e613f5d565b606091505b505090508015613fa45782600b018281548110613f7d57613f7c61554a565b5b905f5260205f200154836006015f828254613f989190615926565b92505081905550613fdf565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613fd690615ada565b60405180910390fd5b508080613feb906155a4565b915050613e8f565b5050505050565b5f3490505f805f8481526020019081526020015f20905042816005015411614057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161404e90615baa565b60405180910390fd5b5f3411614099576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161409090615c38565b60405180910390fd5b5f151581600c0160019054906101000a900460ff161515146140f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016140e790615ca0565b60405180910390fd5b806004015481600601541061413a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161413190615d2e565b60405180910390fd5b34816006015f82825461414d9190615631565b925050819055506001816007015f8282546141689190615631565b9250508190555080600a0133908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b0134908060018154018082558091505060019003905f5260205f20015f9091909190915055828160090181905550805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806004015434826006015461427a9190615631565b1061429c57600181600c015f6101000a81548160ff0219169083151502179055505b8060040154816006015411156143b6575f816004015482600601546142c19190615926565b90505f3373ffffffffffffffffffffffffffffffffffffffff16826040516142e890615a7c565b5f6040518083038185875af1925050503d805f8114614322576040519150601f19603f3d011682016040523d82523d5f602084013e614327565b606091505b5050905080156143785781836006015f8282546143449190615926565b9250508190555082600b0182908060018154018082558091505060019003905f5260205f20015f90919091909150556143b3565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016143aa90615ada565b60405180910390fd5b50505b80600c015f9054906101000a900460ff16156144e0575f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168360405161441390615a7c565b5f6040518083038185875af1925050503d805f811461444d576040519150601f19603f3d011682016040523d82523d5f602084013e614452565b606091505b5050905080156144a35782826006015f82825461446f9190615631565b9250508190555081600b0183908060018154018082558091505060019003905f5260205f20015f90919091909150556144de565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016144d590615ada565b60405180910390fd5b505b806004015481600601541061450c57600181600c015f6101000a81548160ff0219169083151502179055505b505050565b5f805f8381526020019081526020015f20600a01805490509050919050565b604051806101c001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160608152602001606081526020015f81526020015f81526020015f81526020015f8152602001606081526020015f815260200160608152602001606081526020015f151581526020015f151581525090565b5080546145bd90615468565b5f825580601f106145ce57506145eb565b601f0160209004905f5260205f20908101906145ea9190614615565b5b50565b60405180608001604052806060815260200160608152602001606081526020015f81525090565b5b8082111561462c575f815f905550600101614616565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b61465381614641565b811461465d575f80fd5b50565b5f8135905061466e8161464a565b92915050565b5f6020828403121561468957614688614639565b5b5f61469684828501614660565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6146f1826146c8565b9050919050565b614701816146e7565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561473e578082015181840152602081019050614723565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61476382614707565b61476d8185614711565b935061477d818560208601614721565b61478681614749565b840191505092915050565b61479a81614641565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f6147d483836146f8565b60208301905092915050565b5f602082019050919050565b5f6147f6826147a0565b61480081856147aa565b935061480b836147ba565b805f5b8381101561483b57815161482288826147c9565b975061482d836147e0565b92505060018101905061480e565b5085935050505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f61487c8383614791565b60208301905092915050565b5f602082019050919050565b5f61489e82614848565b6148a88185614852565b93506148b383614862565b805f5b838110156148e35781516148ca8882614871565b97506148d583614888565b9250506001810190506148b6565b5085935050505092915050565b5f8115159050919050565b614904816148f0565b82525050565b5f6101c083015f8301516149205f8601826146f8565b50602083015184820360208601526149388282614759565b915050604083015184820360408601526149528282614759565b9150506060830151848203606086015261496c8282614759565b91505060808301516149816080860182614791565b5060a083015161499460a0860182614791565b5060c08301516149a760c0860182614791565b5060e08301516149ba60e0860182614791565b506101008301518482036101008601526149d48282614759565b9150506101208301516149eb610120860182614791565b50610140830151848203610140860152614a0582826147ec565b915050610160830151848203610160860152614a218282614894565b915050610180830151614a386101808601826148fb565b506101a0830151614a4d6101a08601826148fb565b508091505092915050565b5f614a63838361490a565b905092915050565b5f602082019050919050565b5f614a818261469f565b614a8b81856146a9565b935083602082028501614a9d856146b9565b805f5b85811015614ad85784840389528151614ab98582614a58565b9450614ac483614a6b565b925060208a01995050600181019050614aa0565b50829750879550505050505092915050565b5f6020820190508181035f830152614b028184614a77565b905092915050565b614b13816146e7565b82525050565b5f82825260208201905092915050565b5f614b3382614707565b614b3d8185614b19565b9350614b4d818560208601614721565b614b5681614749565b840191505092915050565b614b6a81614641565b82525050565b614b79816148f0565b82525050565b5f61018082019050614b935f83018f614b0a565b8181036020830152614ba5818e614b29565b90508181036040830152614bb9818d614b29565b90508181036060830152614bcd818c614b29565b9050614bdc608083018b614b61565b614be960a083018a614b61565b614bf660c0830189614b61565b614c0360e0830188614b61565b818103610100830152614c168187614b29565b9050614c26610120830186614b61565b614c34610140830185614b70565b614c42610160830184614b70565b9d9c50505050505050505050505050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b614c9182614749565b810181811067ffffffffffffffff82111715614cb057614caf614c5b565b5b80604052505050565b5f614cc2614630565b9050614cce8282614c88565b919050565b5f67ffffffffffffffff821115614ced57614cec614c5b565b5b614cf682614749565b9050602081019050919050565b828183375f83830152505050565b5f614d23614d1e84614cd3565b614cb9565b905082815260208101848484011115614d3f57614d3e614c57565b5b614d4a848285614d03565b509392505050565b5f82601f830112614d6657614d65614c53565b5b8135614d76848260208601614d11565b91505092915050565b5f60208284031215614d9457614d93614639565b5b5f82013567ffffffffffffffff811115614db157614db061463d565b5b614dbd84828501614d52565b91505092915050565b5f602082019050614dd95f830184614b61565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f608083015f8301518482035f860152614e228282614759565b91505060208301518482036020860152614e3c8282614759565b91505060408301518482036040860152614e568282614759565b9150506060830151614e6b6060860182614791565b508091505092915050565b5f614e818383614e08565b905092915050565b5f602082019050919050565b5f614e9f82614ddf565b614ea98185614de9565b935083602082028501614ebb85614df9565b805f5b85811015614ef65784840389528151614ed78582614e76565b9450614ee283614e89565b925060208a01995050600181019050614ebe565b50829750879550505050505092915050565b5f6020820190508181035f830152614f208184614e95565b905092915050565b5f82825260208201905092915050565b5f614f4282614848565b614f4c8185614f28565b9350614f5783614862565b805f5b83811015614f87578151614f6e8882614871565b9750614f7983614888565b925050600181019050614f5a565b5085935050505092915050565b5f6020820190508181035f830152614fac8184614f38565b905092915050565b614fbd816146e7565b8114614fc7575f80fd5b50565b5f81359050614fd881614fb4565b92915050565b5f60208284031215614ff357614ff2614639565b5b5f61500084828501614fca565b91505092915050565b5f6101c083015f83015161501f5f8601826146f8565b50602083015184820360208601526150378282614759565b915050604083015184820360408601526150518282614759565b9150506060830151848203606086015261506b8282614759565b91505060808301516150806080860182614791565b5060a083015161509360a0860182614791565b5060c08301516150a660c0860182614791565b5060e08301516150b960e0860182614791565b506101008301518482036101008601526150d38282614759565b9150506101208301516150ea610120860182614791565b5061014083015184820361014086015261510482826147ec565b9150506101608301518482036101608601526151208282614894565b9150506101808301516151376101808601826148fb565b506101a083015161514c6101a08601826148fb565b508091505092915050565b5f6020820190508181035f83015261516f8184615009565b905092915050565b5f805f805f8060c0878903121561519157615190614639565b5b5f87013567ffffffffffffffff8111156151ae576151ad61463d565b5b6151ba89828a01614d52565b965050602087013567ffffffffffffffff8111156151db576151da61463d565b5b6151e789828a01614d52565b955050604087013567ffffffffffffffff8111156152085761520761463d565b5b61521489828a01614d52565b945050606061522589828a01614660565b935050608061523689828a01614660565b92505060a087013567ffffffffffffffff8111156152575761525661463d565b5b61526389828a01614d52565b9150509295509295509295565b5f82825260208201905092915050565b5f61528a826147a0565b6152948185615270565b935061529f836147ba565b805f5b838110156152cf5781516152b688826147c9565b97506152c1836147e0565b9250506001810190506152a2565b5085935050505092915050565b5f6060820190508181035f8301526152f48186615280565b905081810360208301526153088185614f38565b90506153176040830184614b61565b949350505050565b5f805f6060848603121561533657615335614639565b5b5f84013567ffffffffffffffff8111156153535761535261463d565b5b61535f86828701614d52565b935050602084013567ffffffffffffffff8111156153805761537f61463d565b5b61538c86828701614d52565b925050604084013567ffffffffffffffff8111156153ad576153ac61463d565b5b6153b986828701614d52565b9150509250925092565b5f6080820190508181035f8301526153db8187614b29565b905081810360208301526153ef8186614b29565b905081810360408301526154038185614b29565b90506154126060830184614b61565b95945050505050565b5f6020820190508181035f8301526154338184615280565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061547f57607f821691505b6020821081036154925761549161543b565b5b50919050565b5f81905092915050565b5f819050815f5260205f209050919050565b5f81546154c081615468565b6154ca8186615498565b9450600182165f81146154e457600181146154f95761552b565b60ff198316865281151582028601935061552b565b615502856154a2565b5f5b8381101561552357815481890152600182019150602081019050615504565b838801955050505b50505092915050565b5f61553f82846154b4565b915081905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6155ae82614641565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036155e0576155df615577565b5b600182019050919050565b5f6155f582614707565b6155ff8185615498565b935061560f818560208601614721565b80840191505092915050565b5f61562682846155eb565b915081905092915050565b5f61563b82614641565b915061564683614641565b925082820190508082111561565e5761565d615577565b5b92915050565b7f446561646c696e65206973206e6f7420706173736564000000000000000000005f82015250565b5f615698601683614b19565b91506156a382615664565b602082019050919050565b5f6020820190508181035f8301526156c58161568c565b9050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026157167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826156db565b61572086836156db565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61575b61575661575184614641565b615738565b614641565b9050919050565b5f819050919050565b61577483615741565b61578861578082615762565b8484546156e7565b825550505050565b5f90565b61579c615790565b6157a781848461576b565b505050565b5b818110156157ca576157bf5f82615794565b6001810190506157ad565b5050565b601f82111561580f576157e0816154a2565b6157e9846156cc565b810160208510156157f8578190505b61580c615804856156cc565b8301826157ac565b50505b505050565b5f82821c905092915050565b5f61582f5f1984600802615814565b1980831691505092915050565b5f6158478383615820565b9150826002028217905092915050565b61586082614707565b67ffffffffffffffff81111561587957615878614c5b565b5b6158838254615468565b61588e8282856157ce565b5f60209050601f8311600181146158bf575f84156158ad578287015190505b6158b7858261583c565b86555061591e565b601f1984166158cd866154a2565b5f5b828110156158f4578489015182556001820191506020850194506020810190506158cf565b86831015615911578489015161590d601f891682615820565b8355505b6001600288020188555050505b505050505050565b5f61593082614641565b915061593b83614641565b925082820390508181111561595357615952615577565b5b92915050565b7f596f7520617265206e6f7420746865206f776e6572206f6620746869732063615f8201527f6d706169676e0000000000000000000000000000000000000000000000000000602082015250565b5f6159b3602683614b19565b91506159be82615959565b604082019050919050565b5f6020820190508181035f8301526159e0816159a7565b9050919050565b7f43616d706169676e20676f616c206973206e6f742072656163686564000000005f82015250565b5f615a1b601c83614b19565b9150615a26826159e7565b602082019050919050565b5f6020820190508181035f830152615a4881615a0f565b9050919050565b5f81905092915050565b50565b5f615a675f83615a4f565b9150615a7282615a59565b5f82019050919050565b5f615a8682615a5c565b9150819050919050565b7f4661696c656420746f2073656e642045746865720000000000000000000000005f82015250565b5f615ac4601483614b19565b9150615acf82615a90565b602082019050919050565b5f6020820190508181035f830152615af181615ab8565b9050919050565b7f43616d706169676e20676f616c206973207265616368656400000000000000005f82015250565b5f615b2c601883614b19565b9150615b3782615af8565b602082019050919050565b5f6020820190508181035f830152615b5981615b20565b9050919050565b7f446561646c696e652069732070617373656400000000000000000000000000005f82015250565b5f615b94601283614b19565b9150615b9f82615b60565b602082019050919050565b5f6020820190508181035f830152615bc181615b88565b9050919050565b7f446f6e6174696f6e20616d6f756e74206d7573742062652067726561746572205f8201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b5f615c22602683614b19565b9150615c2d82615bc8565b604082019050919050565b5f6020820190508181035f830152615c4f81615c16565b9050919050565b7f43616d706169676e2069732064656c65746564000000000000000000000000005f82015250565b5f615c8a601383614b19565b9150615c9582615c56565b602082019050919050565b5f6020820190508181035f830152615cb781615c7e565b9050919050565b7f43616d706169676e20676f616c20697320726561636865642c20796f752063615f8201527f6e277420646f6e61746500000000000000000000000000000000000000000000602082015250565b5f615d18602a83614b19565b9150615d2382615cbe565b604082019050919050565b5f6020820190508181035f830152615d4581615d0c565b905091905056fea2646970667358221220164ae0d4345b46b3b417d434e4269490dbebaec353307b809f587d16bc7f271d64736f6c63430008140033",
}

// GenABI is the input ABI used to generate the binding from.
// Deprecated: Use GenMetaData.ABI instead.
var GenABI = GenMetaData.ABI

// GenBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use GenMetaData.Bin instead.
var GenBin = GenMetaData.Bin

// DeployGen deploys a new Ethereum contract, binding an instance of Gen to it.
func DeployGen(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Gen, error) {
	parsed, err := GenMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(GenBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Gen{GenCaller: GenCaller{contract: contract}, GenTransactor: GenTransactor{contract: contract}, GenFilterer: GenFilterer{contract: contract}}, nil
}

// Gen is an auto generated Go binding around an Ethereum contract.
type Gen struct {
	GenCaller     // Read-only binding to the contract
	GenTransactor // Write-only binding to the contract
	GenFilterer   // Log filterer for contract events
}

// GenCaller is an auto generated read-only Go binding around an Ethereum contract.
type GenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type GenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type GenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// GenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type GenSession struct {
	Contract     *Gen              // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// GenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type GenCallerSession struct {
	Contract *GenCaller    // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// GenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type GenTransactorSession struct {
	Contract     *GenTransactor    // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// GenRaw is an auto generated low-level Go binding around an Ethereum contract.
type GenRaw struct {
	Contract *Gen // Generic contract binding to access the raw methods on
}

// GenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type GenCallerRaw struct {
	Contract *GenCaller // Generic read-only contract binding to access the raw methods on
}

// GenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type GenTransactorRaw struct {
	Contract *GenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewGen creates a new instance of Gen, bound to a specific deployed contract.
func NewGen(address common.Address, backend bind.ContractBackend) (*Gen, error) {
	contract, err := bindGen(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Gen{GenCaller: GenCaller{contract: contract}, GenTransactor: GenTransactor{contract: contract}, GenFilterer: GenFilterer{contract: contract}}, nil
}

// NewGenCaller creates a new read-only instance of Gen, bound to a specific deployed contract.
func NewGenCaller(address common.Address, caller bind.ContractCaller) (*GenCaller, error) {
	contract, err := bindGen(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &GenCaller{contract: contract}, nil
}

// NewGenTransactor creates a new write-only instance of Gen, bound to a specific deployed contract.
func NewGenTransactor(address common.Address, transactor bind.ContractTransactor) (*GenTransactor, error) {
	contract, err := bindGen(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &GenTransactor{contract: contract}, nil
}

// NewGenFilterer creates a new log filterer instance of Gen, bound to a specific deployed contract.
func NewGenFilterer(address common.Address, filterer bind.ContractFilterer) (*GenFilterer, error) {
	contract, err := bindGen(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &GenFilterer{contract: contract}, nil
}

// bindGen binds a generic wrapper to an already deployed contract.
func bindGen(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(GenABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Gen *GenRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Gen.Contract.GenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Gen *GenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Gen.Contract.GenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Gen *GenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Gen.Contract.GenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Gen *GenCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Gen.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Gen *GenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Gen.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Gen *GenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Gen.Contract.contract.Transact(opts, method, params...)
}

// CampaignCount is a free data retrieval call binding the contract method 0x7274e30d.
//
// Solidity: function campaignCount() view returns(uint256)
func (_Gen *GenCaller) CampaignCount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "campaignCount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CampaignCount is a free data retrieval call binding the contract method 0x7274e30d.
//
// Solidity: function campaignCount() view returns(uint256)
func (_Gen *GenSession) CampaignCount() (*big.Int, error) {
	return _Gen.Contract.CampaignCount(&_Gen.CallOpts)
}

// CampaignCount is a free data retrieval call binding the contract method 0x7274e30d.
//
// Solidity: function campaignCount() view returns(uint256)
func (_Gen *GenCallerSession) CampaignCount() (*big.Int, error) {
	return _Gen.Contract.CampaignCount(&_Gen.CallOpts)
}

// Campaigns is a free data retrieval call binding the contract method 0x141961bc.
//
// Solidity: function campaigns(uint256 ) view returns(address owner, string campaignType, string title, string description, uint256 goal, uint256 deadline, uint256 totalFunds, uint256 totalContributors, string image, uint256 id, bool goalReached, bool isDeleted)
func (_Gen *GenCaller) Campaigns(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Owner             common.Address
	CampaignType      string
	Title             string
	Description       string
	Goal              *big.Int
	Deadline          *big.Int
	TotalFunds        *big.Int
	TotalContributors *big.Int
	Image             string
	Id                *big.Int
	GoalReached       bool
	IsDeleted         bool
}, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "campaigns", arg0)

	outstruct := new(struct {
		Owner             common.Address
		CampaignType      string
		Title             string
		Description       string
		Goal              *big.Int
		Deadline          *big.Int
		TotalFunds        *big.Int
		TotalContributors *big.Int
		Image             string
		Id                *big.Int
		GoalReached       bool
		IsDeleted         bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Owner = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.CampaignType = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Title = *abi.ConvertType(out[2], new(string)).(*string)
	outstruct.Description = *abi.ConvertType(out[3], new(string)).(*string)
	outstruct.Goal = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)
	outstruct.Deadline = *abi.ConvertType(out[5], new(*big.Int)).(**big.Int)
	outstruct.TotalFunds = *abi.ConvertType(out[6], new(*big.Int)).(**big.Int)
	outstruct.TotalContributors = *abi.ConvertType(out[7], new(*big.Int)).(**big.Int)
	outstruct.Image = *abi.ConvertType(out[8], new(string)).(*string)
	outstruct.Id = *abi.ConvertType(out[9], new(*big.Int)).(**big.Int)
	outstruct.GoalReached = *abi.ConvertType(out[10], new(bool)).(*bool)
	outstruct.IsDeleted = *abi.ConvertType(out[11], new(bool)).(*bool)

	return *outstruct, err

}

// Campaigns is a free data retrieval call binding the contract method 0x141961bc.
//
// Solidity: function campaigns(uint256 ) view returns(address owner, string campaignType, string title, string description, uint256 goal, uint256 deadline, uint256 totalFunds, uint256 totalContributors, string image, uint256 id, bool goalReached, bool isDeleted)
func (_Gen *GenSession) Campaigns(arg0 *big.Int) (struct {
	Owner             common.Address
	CampaignType      string
	Title             string
	Description       string
	Goal              *big.Int
	Deadline          *big.Int
	TotalFunds        *big.Int
	TotalContributors *big.Int
	Image             string
	Id                *big.Int
	GoalReached       bool
	IsDeleted         bool
}, error) {
	return _Gen.Contract.Campaigns(&_Gen.CallOpts, arg0)
}

// Campaigns is a free data retrieval call binding the contract method 0x141961bc.
//
// Solidity: function campaigns(uint256 ) view returns(address owner, string campaignType, string title, string description, uint256 goal, uint256 deadline, uint256 totalFunds, uint256 totalContributors, string image, uint256 id, bool goalReached, bool isDeleted)
func (_Gen *GenCallerSession) Campaigns(arg0 *big.Int) (struct {
	Owner             common.Address
	CampaignType      string
	Title             string
	Description       string
	Goal              *big.Int
	Deadline          *big.Int
	TotalFunds        *big.Int
	TotalContributors *big.Int
	Image             string
	Id                *big.Int
	GoalReached       bool
	IsDeleted         bool
}, error) {
	return _Gen.Contract.Campaigns(&_Gen.CallOpts, arg0)
}

// Categories is a free data retrieval call binding the contract method 0xc6cdbe5e.
//
// Solidity: function categories(uint256 ) view returns(string name, string description, string image, uint256 id)
func (_Gen *GenCaller) Categories(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Name        string
	Description string
	Image       string
	Id          *big.Int
}, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "categories", arg0)

	outstruct := new(struct {
		Name        string
		Description string
		Image       string
		Id          *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Name = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Description = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.Image = *abi.ConvertType(out[2], new(string)).(*string)
	outstruct.Id = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Categories is a free data retrieval call binding the contract method 0xc6cdbe5e.
//
// Solidity: function categories(uint256 ) view returns(string name, string description, string image, uint256 id)
func (_Gen *GenSession) Categories(arg0 *big.Int) (struct {
	Name        string
	Description string
	Image       string
	Id          *big.Int
}, error) {
	return _Gen.Contract.Categories(&_Gen.CallOpts, arg0)
}

// Categories is a free data retrieval call binding the contract method 0xc6cdbe5e.
//
// Solidity: function categories(uint256 ) view returns(string name, string description, string image, uint256 id)
func (_Gen *GenCallerSession) Categories(arg0 *big.Int) (struct {
	Name        string
	Description string
	Image       string
	Id          *big.Int
}, error) {
	return _Gen.Contract.Categories(&_Gen.CallOpts, arg0)
}

// CategoryCount is a free data retrieval call binding the contract method 0x2be32dbb.
//
// Solidity: function categoryCount() view returns(uint256)
func (_Gen *GenCaller) CategoryCount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "categoryCount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CategoryCount is a free data retrieval call binding the contract method 0x2be32dbb.
//
// Solidity: function categoryCount() view returns(uint256)
func (_Gen *GenSession) CategoryCount() (*big.Int, error) {
	return _Gen.Contract.CategoryCount(&_Gen.CallOpts)
}

// CategoryCount is a free data retrieval call binding the contract method 0x2be32dbb.
//
// Solidity: function categoryCount() view returns(uint256)
func (_Gen *GenCallerSession) CategoryCount() (*big.Int, error) {
	return _Gen.Contract.CategoryCount(&_Gen.CallOpts)
}

// GetCampaign is a free data retrieval call binding the contract method 0x5598f8cc.
//
// Solidity: function getCampaign(uint256 _campaignId) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool))
func (_Gen *GenCaller) GetCampaign(opts *bind.CallOpts, _campaignId *big.Int) (CrowdFundingCampaign, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaign", _campaignId)

	if err != nil {
		return *new(CrowdFundingCampaign), err
	}

	out0 := *abi.ConvertType(out[0], new(CrowdFundingCampaign)).(*CrowdFundingCampaign)

	return out0, err

}

// GetCampaign is a free data retrieval call binding the contract method 0x5598f8cc.
//
// Solidity: function getCampaign(uint256 _campaignId) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool))
func (_Gen *GenSession) GetCampaign(_campaignId *big.Int) (CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaign(&_Gen.CallOpts, _campaignId)
}

// GetCampaign is a free data retrieval call binding the contract method 0x5598f8cc.
//
// Solidity: function getCampaign(uint256 _campaignId) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool))
func (_Gen *GenCallerSession) GetCampaign(_campaignId *big.Int) (CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaign(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonations is a free data retrieval call binding the contract method 0x5167642f.
//
// Solidity: function getCampaignDonations(uint256 _campaignId) view returns(uint256[])
func (_Gen *GenCaller) GetCampaignDonations(opts *bind.CallOpts, _campaignId *big.Int) ([]*big.Int, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaignDonations", _campaignId)

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// GetCampaignDonations is a free data retrieval call binding the contract method 0x5167642f.
//
// Solidity: function getCampaignDonations(uint256 _campaignId) view returns(uint256[])
func (_Gen *GenSession) GetCampaignDonations(_campaignId *big.Int) ([]*big.Int, error) {
	return _Gen.Contract.GetCampaignDonations(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonations is a free data retrieval call binding the contract method 0x5167642f.
//
// Solidity: function getCampaignDonations(uint256 _campaignId) view returns(uint256[])
func (_Gen *GenCallerSession) GetCampaignDonations(_campaignId *big.Int) ([]*big.Int, error) {
	return _Gen.Contract.GetCampaignDonations(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonationsCount is a free data retrieval call binding the contract method 0x4ea74046.
//
// Solidity: function getCampaignDonationsCount(uint256 _campaignId) view returns(uint256)
func (_Gen *GenCaller) GetCampaignDonationsCount(opts *bind.CallOpts, _campaignId *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaignDonationsCount", _campaignId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetCampaignDonationsCount is a free data retrieval call binding the contract method 0x4ea74046.
//
// Solidity: function getCampaignDonationsCount(uint256 _campaignId) view returns(uint256)
func (_Gen *GenSession) GetCampaignDonationsCount(_campaignId *big.Int) (*big.Int, error) {
	return _Gen.Contract.GetCampaignDonationsCount(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonationsCount is a free data retrieval call binding the contract method 0x4ea74046.
//
// Solidity: function getCampaignDonationsCount(uint256 _campaignId) view returns(uint256)
func (_Gen *GenCallerSession) GetCampaignDonationsCount(_campaignId *big.Int) (*big.Int, error) {
	return _Gen.Contract.GetCampaignDonationsCount(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonationsSum is a free data retrieval call binding the contract method 0x475ef40a.
//
// Solidity: function getCampaignDonationsSum(uint256 _campaignId) view returns(uint256)
func (_Gen *GenCaller) GetCampaignDonationsSum(opts *bind.CallOpts, _campaignId *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaignDonationsSum", _campaignId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetCampaignDonationsSum is a free data retrieval call binding the contract method 0x475ef40a.
//
// Solidity: function getCampaignDonationsSum(uint256 _campaignId) view returns(uint256)
func (_Gen *GenSession) GetCampaignDonationsSum(_campaignId *big.Int) (*big.Int, error) {
	return _Gen.Contract.GetCampaignDonationsSum(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonationsSum is a free data retrieval call binding the contract method 0x475ef40a.
//
// Solidity: function getCampaignDonationsSum(uint256 _campaignId) view returns(uint256)
func (_Gen *GenCallerSession) GetCampaignDonationsSum(_campaignId *big.Int) (*big.Int, error) {
	return _Gen.Contract.GetCampaignDonationsSum(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonators is a free data retrieval call binding the contract method 0xe6ea7dcc.
//
// Solidity: function getCampaignDonators(uint256 _campaignId) view returns(address[])
func (_Gen *GenCaller) GetCampaignDonators(opts *bind.CallOpts, _campaignId *big.Int) ([]common.Address, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaignDonators", _campaignId)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetCampaignDonators is a free data retrieval call binding the contract method 0xe6ea7dcc.
//
// Solidity: function getCampaignDonators(uint256 _campaignId) view returns(address[])
func (_Gen *GenSession) GetCampaignDonators(_campaignId *big.Int) ([]common.Address, error) {
	return _Gen.Contract.GetCampaignDonators(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonators is a free data retrieval call binding the contract method 0xe6ea7dcc.
//
// Solidity: function getCampaignDonators(uint256 _campaignId) view returns(address[])
func (_Gen *GenCallerSession) GetCampaignDonators(_campaignId *big.Int) ([]common.Address, error) {
	return _Gen.Contract.GetCampaignDonators(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonatorsCount is a free data retrieval call binding the contract method 0xfebe3143.
//
// Solidity: function getCampaignDonatorsCount(uint256 _campaignId) view returns(uint256)
func (_Gen *GenCaller) GetCampaignDonatorsCount(opts *bind.CallOpts, _campaignId *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaignDonatorsCount", _campaignId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetCampaignDonatorsCount is a free data retrieval call binding the contract method 0xfebe3143.
//
// Solidity: function getCampaignDonatorsCount(uint256 _campaignId) view returns(uint256)
func (_Gen *GenSession) GetCampaignDonatorsCount(_campaignId *big.Int) (*big.Int, error) {
	return _Gen.Contract.GetCampaignDonatorsCount(&_Gen.CallOpts, _campaignId)
}

// GetCampaignDonatorsCount is a free data retrieval call binding the contract method 0xfebe3143.
//
// Solidity: function getCampaignDonatorsCount(uint256 _campaignId) view returns(uint256)
func (_Gen *GenCallerSession) GetCampaignDonatorsCount(_campaignId *big.Int) (*big.Int, error) {
	return _Gen.Contract.GetCampaignDonatorsCount(&_Gen.CallOpts, _campaignId)
}

// GetCampaigns is a free data retrieval call binding the contract method 0xa6b03633.
//
// Solidity: function getCampaigns() view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCaller) GetCampaigns(opts *bind.CallOpts) ([]CrowdFundingCampaign, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaigns")

	if err != nil {
		return *new([]CrowdFundingCampaign), err
	}

	out0 := *abi.ConvertType(out[0], new([]CrowdFundingCampaign)).(*[]CrowdFundingCampaign)

	return out0, err

}

// GetCampaigns is a free data retrieval call binding the contract method 0xa6b03633.
//
// Solidity: function getCampaigns() view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenSession) GetCampaigns() ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaigns(&_Gen.CallOpts)
}

// GetCampaigns is a free data retrieval call binding the contract method 0xa6b03633.
//
// Solidity: function getCampaigns() view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCallerSession) GetCampaigns() ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaigns(&_Gen.CallOpts)
}

// GetCampaignsByCategory is a free data retrieval call binding the contract method 0xd07f5b0e.
//
// Solidity: function getCampaignsByCategory(uint256 _categoryId) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCaller) GetCampaignsByCategory(opts *bind.CallOpts, _categoryId *big.Int) ([]CrowdFundingCampaign, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaignsByCategory", _categoryId)

	if err != nil {
		return *new([]CrowdFundingCampaign), err
	}

	out0 := *abi.ConvertType(out[0], new([]CrowdFundingCampaign)).(*[]CrowdFundingCampaign)

	return out0, err

}

// GetCampaignsByCategory is a free data retrieval call binding the contract method 0xd07f5b0e.
//
// Solidity: function getCampaignsByCategory(uint256 _categoryId) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenSession) GetCampaignsByCategory(_categoryId *big.Int) ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaignsByCategory(&_Gen.CallOpts, _categoryId)
}

// GetCampaignsByCategory is a free data retrieval call binding the contract method 0xd07f5b0e.
//
// Solidity: function getCampaignsByCategory(uint256 _categoryId) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCallerSession) GetCampaignsByCategory(_categoryId *big.Int) ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaignsByCategory(&_Gen.CallOpts, _categoryId)
}

// GetCampaignsByOwner is a free data retrieval call binding the contract method 0x51bdebb9.
//
// Solidity: function getCampaignsByOwner(address _owner) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCaller) GetCampaignsByOwner(opts *bind.CallOpts, _owner common.Address) ([]CrowdFundingCampaign, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaignsByOwner", _owner)

	if err != nil {
		return *new([]CrowdFundingCampaign), err
	}

	out0 := *abi.ConvertType(out[0], new([]CrowdFundingCampaign)).(*[]CrowdFundingCampaign)

	return out0, err

}

// GetCampaignsByOwner is a free data retrieval call binding the contract method 0x51bdebb9.
//
// Solidity: function getCampaignsByOwner(address _owner) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenSession) GetCampaignsByOwner(_owner common.Address) ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaignsByOwner(&_Gen.CallOpts, _owner)
}

// GetCampaignsByOwner is a free data retrieval call binding the contract method 0x51bdebb9.
//
// Solidity: function getCampaignsByOwner(address _owner) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCallerSession) GetCampaignsByOwner(_owner common.Address) ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaignsByOwner(&_Gen.CallOpts, _owner)
}

// GetCampaignsByType is a free data retrieval call binding the contract method 0x0cf41a76.
//
// Solidity: function getCampaignsByType(uint256 _categoryId) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCaller) GetCampaignsByType(opts *bind.CallOpts, _categoryId *big.Int) ([]CrowdFundingCampaign, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaignsByType", _categoryId)

	if err != nil {
		return *new([]CrowdFundingCampaign), err
	}

	out0 := *abi.ConvertType(out[0], new([]CrowdFundingCampaign)).(*[]CrowdFundingCampaign)

	return out0, err

}

// GetCampaignsByType is a free data retrieval call binding the contract method 0x0cf41a76.
//
// Solidity: function getCampaignsByType(uint256 _categoryId) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenSession) GetCampaignsByType(_categoryId *big.Int) ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaignsByType(&_Gen.CallOpts, _categoryId)
}

// GetCampaignsByType is a free data retrieval call binding the contract method 0x0cf41a76.
//
// Solidity: function getCampaignsByType(uint256 _categoryId) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCallerSession) GetCampaignsByType(_categoryId *big.Int) ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.GetCampaignsByType(&_Gen.CallOpts, _categoryId)
}

// GetCampaignsCount is a free data retrieval call binding the contract method 0x7e6253da.
//
// Solidity: function getCampaignsCount() view returns(uint256)
func (_Gen *GenCaller) GetCampaignsCount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCampaignsCount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetCampaignsCount is a free data retrieval call binding the contract method 0x7e6253da.
//
// Solidity: function getCampaignsCount() view returns(uint256)
func (_Gen *GenSession) GetCampaignsCount() (*big.Int, error) {
	return _Gen.Contract.GetCampaignsCount(&_Gen.CallOpts)
}

// GetCampaignsCount is a free data retrieval call binding the contract method 0x7e6253da.
//
// Solidity: function getCampaignsCount() view returns(uint256)
func (_Gen *GenCallerSession) GetCampaignsCount() (*big.Int, error) {
	return _Gen.Contract.GetCampaignsCount(&_Gen.CallOpts)
}

// GetCategories is a free data retrieval call binding the contract method 0x4db0412c.
//
// Solidity: function getCategories() view returns((string,string,string,uint256)[])
func (_Gen *GenCaller) GetCategories(opts *bind.CallOpts) ([]CrowdFundingCategory, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getCategories")

	if err != nil {
		return *new([]CrowdFundingCategory), err
	}

	out0 := *abi.ConvertType(out[0], new([]CrowdFundingCategory)).(*[]CrowdFundingCategory)

	return out0, err

}

// GetCategories is a free data retrieval call binding the contract method 0x4db0412c.
//
// Solidity: function getCategories() view returns((string,string,string,uint256)[])
func (_Gen *GenSession) GetCategories() ([]CrowdFundingCategory, error) {
	return _Gen.Contract.GetCategories(&_Gen.CallOpts)
}

// GetCategories is a free data retrieval call binding the contract method 0x4db0412c.
//
// Solidity: function getCategories() view returns((string,string,string,uint256)[])
func (_Gen *GenCallerSession) GetCategories() ([]CrowdFundingCategory, error) {
	return _Gen.Contract.GetCategories(&_Gen.CallOpts)
}

// GetDonorsAddressesAndAmounts is a free data retrieval call binding the contract method 0x88a994af.
//
// Solidity: function getDonorsAddressesAndAmounts(uint256 _campaignId) view returns(address[], uint256[], uint256)
func (_Gen *GenCaller) GetDonorsAddressesAndAmounts(opts *bind.CallOpts, _campaignId *big.Int) ([]common.Address, []*big.Int, *big.Int, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getDonorsAddressesAndAmounts", _campaignId)

	if err != nil {
		return *new([]common.Address), *new([]*big.Int), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	out1 := *abi.ConvertType(out[1], new([]*big.Int)).(*[]*big.Int)
	out2 := *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)

	return out0, out1, out2, err

}

// GetDonorsAddressesAndAmounts is a free data retrieval call binding the contract method 0x88a994af.
//
// Solidity: function getDonorsAddressesAndAmounts(uint256 _campaignId) view returns(address[], uint256[], uint256)
func (_Gen *GenSession) GetDonorsAddressesAndAmounts(_campaignId *big.Int) ([]common.Address, []*big.Int, *big.Int, error) {
	return _Gen.Contract.GetDonorsAddressesAndAmounts(&_Gen.CallOpts, _campaignId)
}

// GetDonorsAddressesAndAmounts is a free data retrieval call binding the contract method 0x88a994af.
//
// Solidity: function getDonorsAddressesAndAmounts(uint256 _campaignId) view returns(address[], uint256[], uint256)
func (_Gen *GenCallerSession) GetDonorsAddressesAndAmounts(_campaignId *big.Int) ([]common.Address, []*big.Int, *big.Int, error) {
	return _Gen.Contract.GetDonorsAddressesAndAmounts(&_Gen.CallOpts, _campaignId)
}

// GetTotalDonationsByCampaignId is a free data retrieval call binding the contract method 0x56511ea4.
//
// Solidity: function getTotalDonationsByCampaignId(uint256 _campaignId) view returns(uint256)
func (_Gen *GenCaller) GetTotalDonationsByCampaignId(opts *bind.CallOpts, _campaignId *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "getTotalDonationsByCampaignId", _campaignId)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTotalDonationsByCampaignId is a free data retrieval call binding the contract method 0x56511ea4.
//
// Solidity: function getTotalDonationsByCampaignId(uint256 _campaignId) view returns(uint256)
func (_Gen *GenSession) GetTotalDonationsByCampaignId(_campaignId *big.Int) (*big.Int, error) {
	return _Gen.Contract.GetTotalDonationsByCampaignId(&_Gen.CallOpts, _campaignId)
}

// GetTotalDonationsByCampaignId is a free data retrieval call binding the contract method 0x56511ea4.
//
// Solidity: function getTotalDonationsByCampaignId(uint256 _campaignId) view returns(uint256)
func (_Gen *GenCallerSession) GetTotalDonationsByCampaignId(_campaignId *big.Int) (*big.Int, error) {
	return _Gen.Contract.GetTotalDonationsByCampaignId(&_Gen.CallOpts, _campaignId)
}

// SearchCampaignByName is a free data retrieval call binding the contract method 0x15562b44.
//
// Solidity: function searchCampaignByName(string _name) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCaller) SearchCampaignByName(opts *bind.CallOpts, _name string) ([]CrowdFundingCampaign, error) {
	var out []interface{}
	err := _Gen.contract.Call(opts, &out, "searchCampaignByName", _name)

	if err != nil {
		return *new([]CrowdFundingCampaign), err
	}

	out0 := *abi.ConvertType(out[0], new([]CrowdFundingCampaign)).(*[]CrowdFundingCampaign)

	return out0, err

}

// SearchCampaignByName is a free data retrieval call binding the contract method 0x15562b44.
//
// Solidity: function searchCampaignByName(string _name) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenSession) SearchCampaignByName(_name string) ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.SearchCampaignByName(&_Gen.CallOpts, _name)
}

// SearchCampaignByName is a free data retrieval call binding the contract method 0x15562b44.
//
// Solidity: function searchCampaignByName(string _name) view returns((address,string,string,string,uint256,uint256,uint256,uint256,string,uint256,address[],uint256[],bool,bool)[])
func (_Gen *GenCallerSession) SearchCampaignByName(_name string) ([]CrowdFundingCampaign, error) {
	return _Gen.Contract.SearchCampaignByName(&_Gen.CallOpts, _name)
}

// CreateCampaign is a paid mutator transaction binding the contract method 0x6e5add48.
//
// Solidity: function createCampaign(string _campaignType, string _title, string _description, uint256 _goal, uint256 _deadline, string _image) returns(uint256)
func (_Gen *GenTransactor) CreateCampaign(opts *bind.TransactOpts, _campaignType string, _title string, _description string, _goal *big.Int, _deadline *big.Int, _image string) (*types.Transaction, error) {
	return _Gen.contract.Transact(opts, "createCampaign", _campaignType, _title, _description, _goal, _deadline, _image)
}

// CreateCampaign is a paid mutator transaction binding the contract method 0x6e5add48.
//
// Solidity: function createCampaign(string _campaignType, string _title, string _description, uint256 _goal, uint256 _deadline, string _image) returns(uint256)
func (_Gen *GenSession) CreateCampaign(_campaignType string, _title string, _description string, _goal *big.Int, _deadline *big.Int, _image string) (*types.Transaction, error) {
	return _Gen.Contract.CreateCampaign(&_Gen.TransactOpts, _campaignType, _title, _description, _goal, _deadline, _image)
}

// CreateCampaign is a paid mutator transaction binding the contract method 0x6e5add48.
//
// Solidity: function createCampaign(string _campaignType, string _title, string _description, uint256 _goal, uint256 _deadline, string _image) returns(uint256)
func (_Gen *GenTransactorSession) CreateCampaign(_campaignType string, _title string, _description string, _goal *big.Int, _deadline *big.Int, _image string) (*types.Transaction, error) {
	return _Gen.Contract.CreateCampaign(&_Gen.TransactOpts, _campaignType, _title, _description, _goal, _deadline, _image)
}

// CreateCategory is a paid mutator transaction binding the contract method 0xa05da7c7.
//
// Solidity: function createCategory(string _name, string _description, string _image) returns(uint256)
func (_Gen *GenTransactor) CreateCategory(opts *bind.TransactOpts, _name string, _description string, _image string) (*types.Transaction, error) {
	return _Gen.contract.Transact(opts, "createCategory", _name, _description, _image)
}

// CreateCategory is a paid mutator transaction binding the contract method 0xa05da7c7.
//
// Solidity: function createCategory(string _name, string _description, string _image) returns(uint256)
func (_Gen *GenSession) CreateCategory(_name string, _description string, _image string) (*types.Transaction, error) {
	return _Gen.Contract.CreateCategory(&_Gen.TransactOpts, _name, _description, _image)
}

// CreateCategory is a paid mutator transaction binding the contract method 0xa05da7c7.
//
// Solidity: function createCategory(string _name, string _description, string _image) returns(uint256)
func (_Gen *GenTransactorSession) CreateCategory(_name string, _description string, _image string) (*types.Transaction, error) {
	return _Gen.Contract.CreateCategory(&_Gen.TransactOpts, _name, _description, _image)
}

// DeleteAllCampaigns is a paid mutator transaction binding the contract method 0x1b7594c8.
//
// Solidity: function deleteAllCampaigns() returns()
func (_Gen *GenTransactor) DeleteAllCampaigns(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Gen.contract.Transact(opts, "deleteAllCampaigns")
}

// DeleteAllCampaigns is a paid mutator transaction binding the contract method 0x1b7594c8.
//
// Solidity: function deleteAllCampaigns() returns()
func (_Gen *GenSession) DeleteAllCampaigns() (*types.Transaction, error) {
	return _Gen.Contract.DeleteAllCampaigns(&_Gen.TransactOpts)
}

// DeleteAllCampaigns is a paid mutator transaction binding the contract method 0x1b7594c8.
//
// Solidity: function deleteAllCampaigns() returns()
func (_Gen *GenTransactorSession) DeleteAllCampaigns() (*types.Transaction, error) {
	return _Gen.Contract.DeleteAllCampaigns(&_Gen.TransactOpts)
}

// DeleteAllCategories is a paid mutator transaction binding the contract method 0x272311af.
//
// Solidity: function deleteAllCategories() returns()
func (_Gen *GenTransactor) DeleteAllCategories(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Gen.contract.Transact(opts, "deleteAllCategories")
}

// DeleteAllCategories is a paid mutator transaction binding the contract method 0x272311af.
//
// Solidity: function deleteAllCategories() returns()
func (_Gen *GenSession) DeleteAllCategories() (*types.Transaction, error) {
	return _Gen.Contract.DeleteAllCategories(&_Gen.TransactOpts)
}

// DeleteAllCategories is a paid mutator transaction binding the contract method 0x272311af.
//
// Solidity: function deleteAllCategories() returns()
func (_Gen *GenTransactorSession) DeleteAllCategories() (*types.Transaction, error) {
	return _Gen.Contract.DeleteAllCategories(&_Gen.TransactOpts)
}

// DeleteCampaign is a paid mutator transaction binding the contract method 0x75970193.
//
// Solidity: function deleteCampaign(uint256 _campaignId) returns()
func (_Gen *GenTransactor) DeleteCampaign(opts *bind.TransactOpts, _campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.contract.Transact(opts, "deleteCampaign", _campaignId)
}

// DeleteCampaign is a paid mutator transaction binding the contract method 0x75970193.
//
// Solidity: function deleteCampaign(uint256 _campaignId) returns()
func (_Gen *GenSession) DeleteCampaign(_campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.DeleteCampaign(&_Gen.TransactOpts, _campaignId)
}

// DeleteCampaign is a paid mutator transaction binding the contract method 0x75970193.
//
// Solidity: function deleteCampaign(uint256 _campaignId) returns()
func (_Gen *GenTransactorSession) DeleteCampaign(_campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.DeleteCampaign(&_Gen.TransactOpts, _campaignId)
}

// DeleteCategory is a paid mutator transaction binding the contract method 0xceca737f.
//
// Solidity: function deleteCategory(uint256 _categoryId) returns()
func (_Gen *GenTransactor) DeleteCategory(opts *bind.TransactOpts, _categoryId *big.Int) (*types.Transaction, error) {
	return _Gen.contract.Transact(opts, "deleteCategory", _categoryId)
}

// DeleteCategory is a paid mutator transaction binding the contract method 0xceca737f.
//
// Solidity: function deleteCategory(uint256 _categoryId) returns()
func (_Gen *GenSession) DeleteCategory(_categoryId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.DeleteCategory(&_Gen.TransactOpts, _categoryId)
}

// DeleteCategory is a paid mutator transaction binding the contract method 0xceca737f.
//
// Solidity: function deleteCategory(uint256 _categoryId) returns()
func (_Gen *GenTransactorSession) DeleteCategory(_categoryId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.DeleteCategory(&_Gen.TransactOpts, _categoryId)
}

// Donate is a paid mutator transaction binding the contract method 0xf14faf6f.
//
// Solidity: function donate(uint256 _campaignId) payable returns()
func (_Gen *GenTransactor) Donate(opts *bind.TransactOpts, _campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.contract.Transact(opts, "donate", _campaignId)
}

// Donate is a paid mutator transaction binding the contract method 0xf14faf6f.
//
// Solidity: function donate(uint256 _campaignId) payable returns()
func (_Gen *GenSession) Donate(_campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.Donate(&_Gen.TransactOpts, _campaignId)
}

// Donate is a paid mutator transaction binding the contract method 0xf14faf6f.
//
// Solidity: function donate(uint256 _campaignId) payable returns()
func (_Gen *GenTransactorSession) Donate(_campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.Donate(&_Gen.TransactOpts, _campaignId)
}

// PayOut is a paid mutator transaction binding the contract method 0xda333ca6.
//
// Solidity: function payOut(uint256 _campaignId) returns()
func (_Gen *GenTransactor) PayOut(opts *bind.TransactOpts, _campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.contract.Transact(opts, "payOut", _campaignId)
}

// PayOut is a paid mutator transaction binding the contract method 0xda333ca6.
//
// Solidity: function payOut(uint256 _campaignId) returns()
func (_Gen *GenSession) PayOut(_campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.PayOut(&_Gen.TransactOpts, _campaignId)
}

// PayOut is a paid mutator transaction binding the contract method 0xda333ca6.
//
// Solidity: function payOut(uint256 _campaignId) returns()
func (_Gen *GenTransactorSession) PayOut(_campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.PayOut(&_Gen.TransactOpts, _campaignId)
}

// SendBackDonations is a paid mutator transaction binding the contract method 0xef343c57.
//
// Solidity: function sendBackDonations(uint256 _campaignId) returns()
func (_Gen *GenTransactor) SendBackDonations(opts *bind.TransactOpts, _campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.contract.Transact(opts, "sendBackDonations", _campaignId)
}

// SendBackDonations is a paid mutator transaction binding the contract method 0xef343c57.
//
// Solidity: function sendBackDonations(uint256 _campaignId) returns()
func (_Gen *GenSession) SendBackDonations(_campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.SendBackDonations(&_Gen.TransactOpts, _campaignId)
}

// SendBackDonations is a paid mutator transaction binding the contract method 0xef343c57.
//
// Solidity: function sendBackDonations(uint256 _campaignId) returns()
func (_Gen *GenTransactorSession) SendBackDonations(_campaignId *big.Int) (*types.Transaction, error) {
	return _Gen.Contract.SendBackDonations(&_Gen.TransactOpts, _campaignId)
}
